import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:foody/buttom_navigator/widget/card_body.dart';
import '../model/recipes_model.dart';
import 'package:http/http.dart' as http;
import 'package:flutter_gen/gen_l10n/app_localizations.dart';

Future<Autogenerated> fetchMenuFavorites() async {
  const String apiUrl =
      'https://api.spoonacular.com/recipes/complexSearch?apiKey=26aa0d4d45a5481a9f34bfdd4a2aee50';
  final response = await http.get(Uri.parse(apiUrl));

  if (response.statusCode == 200) {
    return Autogenerated.fromJson(
        jsonDecode(response.body) as Map<String, dynamic>);
  } else {
    throw Exception('Failed to load Menu');
  }
}

class FavoritesPage extends StatefulWidget {
  const FavoritesPage({super.key});

  @override
  State<FavoritesPage> createState() => _FavoritesPageState();
}

class _FavoritesPageState extends State<FavoritesPage> {
  late Future<Autogenerated> apiFavirites;

  @override
  void initState() {
    super.initState();
    apiFavirites = fetchMenuFavorites();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          title: Text(
            AppLocalizations.of(context)!.favorites,
            style: const TextStyle(
              fontWeight: FontWeight.bold,
              fontSize: 20,
            ),
          ),
          actions: <Widget>[
            IconButton(
              onPressed: () {},
              icon: const Icon(
                Icons.delete,
                size: 24,
              ),
            ),
          ],
        ),
        body: FutureBuilder<Autogenerated>(
          future: apiFavirites,
          builder: (context, snapshot) {
            if (ConnectionState.waiting == snapshot.connectionState) {
              return const Center(
                child: CircularProgressIndicator(),
              );
            }
            if (snapshot.hasError) {
              return Center(
                child: Text('${snapshot.hasError}'),
              );
            }
            return ListView.builder(
                itemCount: snapshot.data?.results!.length,
                itemBuilder: (context, index) {
                  Results favorites = snapshot.data!.results![index];
                  return CardBody(
                    id: favorites.id ?? 0,
                    title: favorites.title ?? '',
                    imageUrl: favorites.image ?? '',
                  );
                }
            );
          },
        ));
  }
}
